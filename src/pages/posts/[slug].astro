---
// src/pages/posts/[slug].astro
import "../../styles/global.css";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { fetchPosts, decodeHTMLEntities } from "../../scripts/scripts.js";
import Card2 from "../../components/Card2.astro";
import Cage from "../../components/Cage.astro";

// This is required for dynamic routes in Astro
export async function getStaticPaths() {
  const posts = await fetchPosts();
  //@ts-ignore
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

// Get the post directly from props since we're now passing the complete post object
const { post } = Astro.props;

const relatedPosts = await fetchPosts(1, 1); // First related post
const relatedPostData = relatedPosts.length > 0 ? relatedPosts[0] : null;

const relatedPosts2 = await fetchPosts(4, 1); // Second related post
const relatedPostData2 = relatedPosts2.length > 0 ? relatedPosts2[0] : null;
---

<html lang="en">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="UTF-8" />
    <!--@ts-ignore -->
    <meta name="description" content={post.desc} />
    <meta name="keywords" content="Formula 1, Blog, F1, OnBoard" />
    <meta name="author" content="00chestnut" />
    <meta name="robots" content="index, follow" />
    <meta property="og:title" content="OnBoard - Formula1" />
    <meta property="og:description" content="A blog about Formula 1." />
    <!--@ts-ignore -->
    <title>{decodeHTMLEntities(post.title)} - OnBoard Formula 1</title>
    <link rel="icon" type="image/svg+xml" href="/f1.svg" />
  </head>
  <body class="darkbg transition-colors duration-300 ease-in-out">
    <container>
      <Header />
      <main class="max-w-4xl mx-auto px-4 py-8 mb-[30rem]">
        <article class="darkbg bg-white rounded-lg shadow-2xl overflow-hidden pb-2">
          <!--@ts-ignore -->
          <img
            src={post.imageUrl}
            alt={decodeHTMLEntities(post.title)}
            class="w-full aspect-[16/9] md:h-[500px] object-cover object-bottom"
          />
          <!--Image above title (could be replaced in the future with a local banner!) -->

          <div class="darkbg bg-white p-6 overflow-hidden">
            <h1
              class="whitetext text-3xl font-bold mb-2 text-gray-900 dark:text-white"
            >
              <!--@ts-ignore -->
              <div hidden data-pagefind-meta="title">{decodeHTMLEntities(post.title)}</div>
              <!--@ts-ignore -->
              {decodeHTMLEntities(post.title)}
            </h1><!--@ts-ignore -->
            <div class="whitetext text-gray-500 dark:text-gray-400 mb-4">
              <!--@ts-ignore -->
              Published on {post.date}
            </div>
            <!--@ts-ignore -->
            <div
              data-pagefind-body
              class="Content prose max-w-none preserve-whitespace dark:prose-invert"
              set:html={post.content}
            />
          </div>
        </article>

        <!-- Back to all posts link -->
        <div class="mt-6">
          <a
            href="/"
            class="inline-flex items-center px-4 py-2 text-sm font-medium text-white bg-red-700 rounded-lg hover:bg-red-800"
          >
            <svg
              class="w-3.5 h-3.5 mr-2 rotate-180"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 14 10"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 5h12m0 0L9 1m4 4L9 9"></path>
            </svg>
            Back to all posts
          </a>
        </div>
        <br>
        <div class="Dollop">Featured posts</div>
        <br>
  <!-- Featured posts -->
<div class="mt-6">
  <div class="flex flex-wrap justify-center gap-6">
    <!-- First Related Post -->
    {relatedPostData ? (
      <Card2
        picture={relatedPostData.imageUrl}
        alt={decodeHTMLEntities(relatedPostData.title)}
        name={decodeHTMLEntities(relatedPostData.title)}
        desc={relatedPostData.description}
        btn="Read More"
        slug={relatedPostData.slug}
      />
    ) : (
      <p>Related post not found.</p>
    )}

    <!-- Second Related Post -->
    {relatedPostData2 ? (
      <Card2
        picture={relatedPostData2.imageUrl}
        alt={decodeHTMLEntities(relatedPostData2.title)}
        name={decodeHTMLEntities(relatedPostData2.title)}
        desc={relatedPostData2.description}
        btn="Read More"
        slug={relatedPostData2.slug}
      />
    ) : (
      <p>Related post not found.</p>
    )}

  </div>
</div>

        <!--@ts-ignore -->
        <div
          class="Tags text-gray-400 dark:text-gray-500 text-xs object-bottom"
          set:html={post.tags}
        >
          <h6>Tags:</h6>
        </div>
      </main>
      <Footer />
    </container>
  </body>
</html>

<style is:global>

.Dollop {
  display: flex;                s
  justify-content: center;     
  align-items: center;          
  font-size:2rem;           
  font-family:Formula, sans-serif;
  color:hsla(0, 0%, 15%, 0.779);
}
.dark .Dollop{
  color:hsla(0, 0%, 85%, 0.779);
}

@media (max-width: 640px) {
  .Card2 
    max-width: 100%;
  }

  .Tags {
    gap: 20px;
  }
  .Content {
    line-height: 1.6;
    color: #333;
  }
  .dark .Content {
    color: #d1d5db;
  }
  .Content h1 {
    font-size: 2rem;
  }
  .Content h2 {
    font-size: 1.5rem;
  }
  .Content h3 {
    font-size: 1.25rem;
  }
  .preserve-whitespace p {
    white-space: pre-line;
    margin-bottom: 1rem;
  }
  .preserve-whitespace br {
    display: block;
    content: "";
    margin-top: 1rem;
  }
  /* Add transition for all elements */
  * {
    transition-property: background-color, border-color, color, fill, stroke;
    transition-duration: 300ms;
    transition-timing-function: ease-in-out;
  }
</style>
