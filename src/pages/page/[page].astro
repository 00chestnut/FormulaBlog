---
import "../../styles/global.css";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Card2 from "../../components/Card2.astro";
import Cage from "../../components/Cage.astro";
import { fetchPosts } from "../../scripts/scripts.js";

export async function getStaticPaths() {
  const allPosts = await fetchPosts();
  const postsPerPage = 6; // Adjust this number based on how many posts you want per page
  const totalPages = Math.ceil(allPosts.length / postsPerPage);
  
  // Create an array of page numbers starting from 1
  const pages = Array.from({ length: totalPages }, (_, i) => i + 1);
  
  // Return the paths for all pages
  return pages.map(page => {
    // Calculate the slice of posts for this page
    const start = (page - 1) * postsPerPage;
    const end = start + postsPerPage;
    const pagePosts = allPosts.slice(start, end);
    
    return {
      params: { page: page.toString() },
      props: { 
        posts: pagePosts,
        currentPage: page,
        totalPages,
        hasNextPage: page < totalPages,
        hasPrevPage: page > 1
      }
    };
  });
}

const { posts, currentPage, totalPages, hasNextPage, hasPrevPage } = Astro.props;
---

<html>
  <head>
    <link rel="icon" type="image/svg+xml" href="/f1.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="UTF-8">
    <meta name="description" content="A blog about Formula 1.">
    <meta name="keywords" content="Formula 1, Blog, F1, OnBoard">
    <meta name="author" content="00chestnut">
    <meta name="robots" content="index, follow">
    <meta property="og:title" content="OnBoard - Formula1">
    <meta property="og:description" content="A blog about Formula 1.">
    <title>OnBoard - Formula 1 - Page {currentPage}</title>
  </head>
  <body>
    <container>
      <Header />
        <main>
          <Cage>
            {posts.length > 0 ? (
                //@ts-ignore
              posts.map((post) => (    
                <Card2
                  picture={post.imageUrl}
                  alt={post.title}
                  name={post.title}
                  desc={post.description}
                  btn="Read more"
                  slug={post.slug}
                />
              ))
            ) : (
            <div class="text-center p-8 bg-white-200 border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">
                  <h3 class="text-xl font-bold">No posts found - big problem</h3>
                  <br>
                  <p>Please <a href="../../footerpages/contact" class="text-blue-500 bold hover:underline mb-1"> contact </a> the site developer as soon as possible.</p>
                  <br>
                  <br>
                  <div class="flex justify-center items-center">
                    <img
                      src="/images/shark.png"
                      class="w-[15rem] h-[15rem] object-center"
                    />
                  </div>
                </div>
            )}
          </Cage>
          
          <!-- Pagination Controls -->
          <div class="pagination flex justify-center items-center my-8 gap-2">
            {/* First page button */}
            <a 
              href="/page/1" 
              class={`px-3 py-2 rounded-lg ${hasPrevPage ? 'bg-red-700 text-white hover:bg-red-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}
              aria-disabled={!hasPrevPage}
            >
              &lt;&lt;
            </a>
            
            {/* Previous page button */}
            <a 
              href={hasPrevPage ? `/page/${currentPage - 1}` : '#'} 
              class={`px-3 py-2 rounded-lg ${hasPrevPage ? 'bg-red-700 text-white hover:bg-red-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}
              aria-disabled={!hasPrevPage}
            >
              &lt;
            </a>
            
            {/* Page indicator */}
            <span class="px-3 py-2 font-medium">
              Page {currentPage} of {totalPages}
            </span>
            
            {/* Next page button */}
            <a 
              href={hasNextPage ? `/page/${currentPage + 1}` : '#'} 
              class={`px-3 py-2 rounded-lg ${hasNextPage ? 'bg-red-700 text-white hover:bg-red-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}
              aria-disabled={!hasNextPage}
            >
              &gt;
            </a>
            
            {/* Last page button */}
            <a 
              href={`/page/${totalPages}`} 
              class={`px-3 py-2 rounded-lg ${hasNextPage ? 'bg-red-700 text-white hover:bg-red-800' : 'bg-gray-300 text-gray-500 cursor-not-allowed'}`}
              aria-disabled={!hasNextPage}
            >
              &gt;&gt;
            </a>
          </div>
        </main>
        <Footer />
    </container>
  </body>
</html>