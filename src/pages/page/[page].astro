---
// src/pages/page/[page].astro
import "../../styles/global.css";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Card2 from "../../components/Card2.astro";
import Cage from "../../components/Cage.astro";
import SearchBar from "../../components/SearchBar.astro";
import Filters from "../../components/Filters.astro";
import { fetchPosts } from "../../scripts/scripts.js";

export async function getStaticPaths() {
  // Get all posts without filtering for static generation
  const allPosts = await fetchPosts();
  const postsPerPage = 9; // posts per page limiter
  const totalPages = Math.ceil(allPosts.length / postsPerPage);

  // Create an array of page numbers starting from 2 (not 1)
  const pages = Array.from({ length: totalPages - 1 }, (_, i) => i + 2);

  // Return the paths for all pages except page 1
  return pages.map((page) => {
    const start = (page - 1) * postsPerPage;
    const end = start + postsPerPage;
    const pagePosts = allPosts.slice(start, end);

    return {
      params: { page: page.toString() },
      props: {
        staticPosts: pagePosts,
        currentPage: page,
        totalPages,
        hasNextPage: page < totalPages,
        hasPrevPage: page > 1,
      },
    };
  });
}

// Get props from static generation
const { staticPosts, currentPage, totalPages, hasNextPage, hasPrevPage } =
  Astro.props;

// Get the category ID from URL parameters if it exists
const categoryId = Astro.url.searchParams.get("category") || null;

// For client-side category filtering, fetch all posts with the category filter
const filteredPosts = categoryId
  ? //@ts-ignore
    await fetchPosts(1, 100, categoryId) // If category is selected, get filtered posts
  : staticPosts; // Otherwise use static posts

// Calculate pagination for the current set of posts
const postsPerPage = 3;
const filteredTotalPages = categoryId
  ? Math.ceil(filteredPosts.length / postsPerPage)
  : totalPages;

// Get the correct page slice for display
let currentPagePosts;
if (categoryId) {
  // When category is selected, we need to slice from the full filtered set
  const start = (currentPage - 1) * postsPerPage;
  const end = start + postsPerPage;
  currentPagePosts = filteredPosts.slice(start, end);
} else {
  // When no category is selected, use the statically generated posts
  currentPagePosts = staticPosts;
}

// Check if we're on a valid page for the current filter
const isValidPage = currentPage <= filteredTotalPages;
---

<html lang="en">
  <head>
    <link rel="icon" type="image/svg+xml" href="/f1.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta charset="UTF-8" />
    <meta
      name="description"
      content={`OnBoard - The latest news, insights and stories about Formula 1 racing. Page ${currentPage} of ${filteredTotalPages}.`}
    />
    <meta
      name="keywords"
      content="Formula 1, Blog, F1, OnBoard, Racing, Motorsport"
    />
    <meta name="author" content="00chestnut" />
    <meta name="robots" content="index, follow" />
    <meta
      property="og:title"
      content={`OnBoard - Formula 1 - Page ${currentPage}`}
    />
    <meta
      property="og:description"
      content={`The latest news, insights and stories about Formula 1 racing. Page ${currentPage} of ${filteredTotalPages}.`}
    />
    <meta property="og:type" content="website" />
    <meta
      property="og:url"
      content={`https://your-website.com/page/${currentPage}`}
    />
    <link
      rel="canonical"
      href={`https://your-website.com/page/${currentPage}`}
    />
    {
      hasPrevPage && (
        <link
          rel="prev"
          href={`/page/${currentPage - 1}${categoryId ? `?category=${categoryId}` : ""}`}
        />
      )
    }
    {
      hasNextPage && (
        <link
          rel="next"
          href={`/page/${currentPage + 1}${categoryId ? `?category=${categoryId}` : ""}`}
        />
      )
    }
    <title>OnBoard - Formula 1 - Page {currentPage}</title>
  </head>
  <body class="transition-colors duration-300 ease-in-out">
    <container>
      <Header />
      <main class="flex flex-col flex-grow min-h-screen">
        <Cage>
          <Filters />
          <div class="w-full mb-12">
            <SearchBar />
          </div>
          {
            !isValidPage ? (
              <div class="text-center p-8 bg-white-200 border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">
                <h3 class="text-xl font-bold dark:text-white">
                  Page Not Found
                </h3>
                <p class="mt-4 dark:text-gray-300">
                  This page doesn't exist for the selected category.
                </p>
                <div class="mt-6">
                  <a
                    href={`/${categoryId ? `?category=${categoryId}` : ""}`}
                    class="px-4 py-2 bg-red-700 text-white rounded-lg hover:bg-red-800"
                  >
                    Go to first page
                  </a>
                </div>
              </div>
            ) : currentPagePosts.length > 0 ? (
              // @ts-ignore
              currentPagePosts.map((post) => (
                <Card2
                  picture={post.imageUrl}
                  alt={post.title}
                  name={post.title}
                  desc={post.description}
                  btn="Read more"
                  slug={post.slug}
                />
              ))
            ) : (
              <div class="text-center p-8 bg-white-200 border border-gray-200 rounded-lg shadow-sm dark:bg-gray-800 dark:border-gray-700">
                <h3 class="text-xl font-bold dark:text-white">
                  No posts found - big problem
                </h3>
                <br />
                <p class="dark:text-gray-300">
                  Please{" "}
                  <a
                    href="../../footerpages/contact"
                    class="text-blue-500 bold hover:underline"
                  >
                    contact
                  </a>{" "}
                  the site developer as soon as possible.
                </p>
                <br />
                <br />
                <div class="flex justify-center items-center">
                  <img
                    src="/images/shark.png"
                    class="w-[15rem] h-[15rem] object-center"
                    alt="Error shark"
                  />
                </div>
              </div>
            )
          }
        </Cage>

        <!-- Pagination Controls -->
        <div
          class="pagination flex flex-wrap justify-center items-center my-4 md:my-8 gap-2 px-4"
        >
          <!-- First page button -->
          <a
            href={`/${categoryId ? `?category=${categoryId}` : ""}`}
            class="px-3 py-2 rounded-lg mb-4 bg-red-700 text-white hover:bg-red-800"
          >
            &lt;&lt;
          </a>

          <!-- Previous page button -->
          <a
            href={currentPage > 2
              ? `/page/${currentPage - 1}${categoryId ? `?category=${categoryId}` : ""}`
              : `/${categoryId ? `?category=${categoryId}` : ""}`}
            class="px-3 py-2 rounded-lg mb-4 bg-red-700 text-white hover:bg-red-800"
          >
            &lt;
          </a>

          <!-- Page indicator -->
          <span class="PageNumber px-3 py-2 font-medium mb-4">
            Page {currentPage} of {filteredTotalPages}
          </span>

          <!-- Next page button -->
          <a
            href={currentPage < filteredTotalPages
              ? `/page/${currentPage + 1}${categoryId ? `?category=${categoryId}` : ""}`
              : "#"}
            class={`px-3 py-2 mb-4 rounded-lg ${currentPage < filteredTotalPages ? "bg-red-700 text-white hover:bg-red-800" : "bg-gray-300 text-gray-500 cursor-not-allowed"}`}
            aria-disabled={currentPage >= filteredTotalPages}
          >
            &gt;
          </a>

          <!-- Last page button -->
          <a
            href={filteredTotalPages > 1
              ? `/page/${filteredTotalPages}${categoryId ? `?category=${categoryId}` : ""}`
              : "#"}
            class={`px-3 py-2 mb-4 rounded-lg transition-colors duration-300 ease-in-out ${currentPage < filteredTotalPages ? "bg-red-700 text-white hover:bg-red-800" : "bg-gray-300 text-gray-500 cursor-not-allowed"}`}
            aria-disabled={currentPage >= filteredTotalPages}
          >
            &gt;&gt;
          </a>
        </div>
      </main>

      <Footer />
    </container>

    <style is:global>
      * {
        transition-property: background-color, border-color, color, fill, stroke;
        transition-duration: 300ms;
        transition-timing-function: ease-in-out;
      }
    </style>
  </body>
</html>
