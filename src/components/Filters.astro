---
import { fetchCategories } from "../scripts/scripts.js";

// Get the category from URL parameters
const selectedCategoryId = Astro.url.searchParams.get('category') || null;

// Fetch categories
const categories = await fetchCategories();

// Sort categories to ensure "Formula 1" appears first
const sortedCategories = [...categories].sort((a, b) => {
  if (a.name === "Formula 1") return -1;
  if (b.name === "Formula 1") return 1;
  return a.name.localeCompare(b.name);
});

// Get current URL pathname
const currentPath = Astro.url.pathname;

// Determine if we are in a category route
const inCategoryRoute = currentPath.startsWith('/category/');

// Determine the base path for pagination
//@ts-ignore
const currentPage = currentPath.match(/\/page\/(\d+)/) ? 
//@ts-ignore
  parseInt(currentPath.match(/\/page\/(\d+)/)[1]) : 1;
--- 

<div class="filtercomponent mb-12">
  <label for="categoryFilter" class="block mb-2 text-md font-medium text-gray-900 dark:text-white">
    Filter post categories
  </label>
  
  <div class="relative">
    <!--@ts-ignore -->
    <select
      id="categoryFilter"
      onChange="window.location.href=this.value"
      class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-red-500 focus:border-red-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-red-500 dark:focus:border-red-500"
    >
      <option value="/">
        All Categories
      </option>
      {sortedCategories.map(category => {
        // Always use the path-based approach for consistent behavior
        const href = `/category/${category.slug}`;
        
        return (
          <option 
            value={href} 
            selected={selectedCategoryId == category.id || (inCategoryRoute && currentPath.includes(`/category/${category.slug}`))}
          >
            {category.name} ({category.count})
          </option>
        );
      })}
    </select>
  </div>
</div>