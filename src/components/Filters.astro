---
import { fetchCategories } from "../scripts/scripts.js";

// Get the category from URL parameters
const selectedCategoryId = Astro.url.searchParams.get('category') || null;

// Fetch categories
const categories = await fetchCategories();

// Sort categories to ensure "Formula 1" appears first
const sortedCategories = [...categories].sort((a, b) => {
  if (a.name === "Formula 1") return -1;
  if (b.name === "Formula 1") return 1;
  return a.name.localeCompare(b.name);
});

// Get current URL pathname
const currentPath = Astro.url.pathname;

// Determine if we are in a category route
const inCategoryRoute = currentPath.startsWith('/category/');

// Find the selected category name
const selectedCategory = sortedCategories.find(cat => 
  selectedCategoryId == cat.id || (inCategoryRoute && currentPath.includes(`/category/${cat.slug}`))
);

// Set the button label (default to "All Categories" if none selected)
const selectedCategoryName = selectedCategory ? `${selectedCategory.name} (${selectedCategory.count})` : "All Categories";
---

<div class="filtercomponent mb-12 relative">
  <!-- Dropdown Button -->
  <button 
    id="dropdownDefaultButton" 
    class="text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800 w-full cursor-pointer"
    type="button"
  >
    {selectedCategoryName}
    <svg class="w-2.5 h-2.5 ms-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
      <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
    </svg>
  </button>

  <!-- Dropdown Menu -->
  <div id="dropdown" class="z-50 hidden bg-white divide-y divide-gray-100 rounded-lg shadow-sm w-full dark:bg-gray-700 absolute mt-2">
    <ul class="py-2 text-sm text-gray-700 dark:text-gray-200">
      <li>
        <a href="/" class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">
          All Categories
        </a>
      </li>
      {sortedCategories.map(category => (
        <li>
          <a 
            href={`/category/${category.slug}`} 
            class="block px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white"
          >
            {category.name} ({category.count})
          </a>
        </li>
      ))}
    </ul>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const dropdownButton = document.getElementById("dropdownDefaultButton");
    const dropdownMenu = document.getElementById("dropdown");
//@ts-ignore
    dropdownButton.addEventListener("click", function () {
        //@ts-ignore
      dropdownMenu.classList.toggle("hidden");
    });

    document.addEventListener("click", function (event) {
        //@ts-ignore
      if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {
        //@ts-ignore
        dropdownMenu.classList.add("hidden");
      }
    });
  });
</script>
